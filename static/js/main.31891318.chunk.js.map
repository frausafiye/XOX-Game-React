{"version":3,"sources":["Container.js","logic/scoreCalculator.js","Players/Player.js","Table/Span.js","Table/TableCell.js","Table/TableRow.js","Table/Table.js","Winner/Winner.js","App.js","index.js"],"names":["myContext","createContext","Container","props","useState","id","value","active","matrix","setMatrix","activePlayer","setActivePlayer","player1","player2","score","setScore","winner","setWinner","overlinedLines","setOverlinedLines","Provider","players","children","scoreCalculator","mtrx","playersScore","scoreCounter","arrayCheck","array","valuesArray","map","cell","length","directions","lineDirectionDeterminator","line","direction","push","horizontalArray","horizontalcheck","verticalArray","verticalcheck","diagonalArray","diagonalcheck","lastScore","linesToOverline","Player","useContext","activeArea","filter","obj","itemToAdd","setItemToAdd","buttonOnclickHandler","type","useEffect","className","player","onClick","newObj","newMatrix","splice","newPlayer","addHandler","Span","directionsClass","edgesToShorten","edgeMapping","horizontal","vertical","diagonalToLeftBottom","diagonalToRightBottom","edgeClassForSpan","edge","includes","join","lineClass","console","log","style","display","TableCell","overlineDirections","isActive","selectHandler","activeClass","edgeDirectionsForCell","cells","key","TableRow","i","overlinedCells","Table","flatMap","lineObj","matrixArray","slice","Winner","playAgainHandler","App","justifyContent","reactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31891318.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nconst myContext = createContext(\"\");\r\nexport { myContext };\r\n\r\nexport default function Container(props) {\r\n  const [matrix, setMatrix] = useState([\r\n    { id: 0, value: null, active: false },\r\n    { id: 1, value: null, active: false },\r\n    { id: 2, value: null, active: false },\r\n    { id: 3, value: null, active: false },\r\n    { id: 4, value: null, active: false },\r\n    { id: 5, value: null, active: false },\r\n    { id: 6, value: null, active: false },\r\n    { id: 7, value: null, active: false },\r\n    { id: 8, value: null, active: false },\r\n  ]);\r\n  const players = [\"player1\", \"player2\"];\r\n  const [activePlayer, setActivePlayer] = useState(\"player1\");\r\n  const [score, setScore] = useState({ player1: 0, player2: 0 });\r\n  const [winner, setWinner] = useState(null);\r\n  const [overlinedLines, setOverlinedLines] = useState([]);\r\n\r\n  return (\r\n    <myContext.Provider\r\n      value={{\r\n        matrix,\r\n        setMatrix,\r\n        players,\r\n        activePlayer,\r\n        setActivePlayer,\r\n        score,\r\n        setScore,\r\n        winner,\r\n        setWinner,\r\n        overlinedLines,\r\n        setOverlinedLines,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </myContext.Provider>\r\n  );\r\n}\r\n","const scoreCalculator = (id, mtrx, playersScore) => {\r\n  let scoreCounter = playersScore;\r\n  const arrayCheck = (array) => {\r\n    const valuesArray = array.map((cell) => cell.value);\r\n\r\n    if (\r\n      valuesArray.length &&\r\n      valuesArray[0] === valuesArray[1] &&\r\n      valuesArray[0] === valuesArray[2]\r\n    ) {\r\n      scoreCounter += 10;\r\n      return array;\r\n    }\r\n    return [];\r\n  };\r\n  const horizontalcheck = (id) => {\r\n    let horizontalArray = [];\r\n    if (id % 3 === 0) {\r\n      horizontalArray = [mtrx[id], mtrx[id + 1], mtrx[id + 2]];\r\n    } else if (id % 3 === 2) {\r\n      horizontalArray = [mtrx[id - 2], mtrx[id - 1], mtrx[id]];\r\n    } else {\r\n      horizontalArray = [mtrx[id - 1], mtrx[id], mtrx[id + 1]];\r\n    }\r\n    return [arrayCheck(horizontalArray), \"horizontal\"];\r\n  };\r\n  const verticalcheck = (id) => {\r\n    let verticalArray = [];\r\n    if (id < 3) {\r\n      verticalArray = [mtrx[id], mtrx[id + 3], mtrx[id + 6]];\r\n    } else if (id >= 3 && id <= 5) {\r\n      verticalArray = [mtrx[id - 3], mtrx[id], mtrx[id + 3]];\r\n    } else {\r\n      verticalArray = [mtrx[id], mtrx[id - 3], mtrx[id - 6]];\r\n    }\r\n    return [arrayCheck(verticalArray), \"vertical\"];\r\n  };\r\n  const diagonalcheck = (id) => {\r\n    let diagonalArray = [];\r\n    if (id === 2 || id === 4 || id === 6) {\r\n      diagonalArray = [mtrx[2], mtrx[4], mtrx[6]];\r\n      return [arrayCheck(diagonalArray), \"diagonalToLeftBottom\"];\r\n    }\r\n    if (id === 0 || id === 4 || id === 8) {\r\n      diagonalArray = [mtrx[0], mtrx[4], mtrx[8]];\r\n      return [arrayCheck(diagonalArray), \"diagonalToRightBottom\"];\r\n    }\r\n    return [];\r\n  };\r\n\r\n  let directions = [];\r\n  const lineDirectionDeterminator = ([line, direction]) => {\r\n    if (line && line.length) {\r\n      directions.push({ line, direction });\r\n    }\r\n  };\r\n  lineDirectionDeterminator(horizontalcheck(id));\r\n  lineDirectionDeterminator(verticalcheck(id));\r\n  lineDirectionDeterminator(diagonalcheck(id));\r\n\r\n  return { lastScore: scoreCounter, linesToOverline: directions };\r\n};\r\n\r\nexport default scoreCalculator;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { myContext } from \"../Container\";\r\nimport scoreCalculator from \"../logic/scoreCalculator\";\r\nimport \"./styles/Player.css\";\r\nimport \"./styles/buttons.css\";\r\nimport \"./styles/scoreText.css\";\r\n\r\nexport default function Player(props) {\r\n  const {\r\n    matrix,\r\n    setMatrix,\r\n    players,\r\n    activePlayer,\r\n    setActivePlayer,\r\n    score,\r\n    setScore,\r\n    setWinner,\r\n    overlinedLines,\r\n    setOverlinedLines,\r\n  } = useContext(myContext);\r\n  let activeArea = matrix.filter((obj) => obj.active === true);\r\n  const [itemToAdd, setItemToAdd] = useState(null);\r\n\r\n  const buttonOnclickHandler = (type) => {\r\n    if (activeArea.length) {\r\n      setItemToAdd(type);\r\n    }\r\n  };\r\n\r\n  const addHandler = () => {\r\n    if (activeArea.length && itemToAdd) {\r\n      setItemToAdd(null);\r\n      let newObj = { ...activeArea[0], value: itemToAdd, active: false };\r\n      let newMatrix = [...matrix];\r\n      newMatrix.splice(activeArea[0].id, 1, newObj);\r\n      setMatrix(newMatrix);\r\n      const { lastScore, linesToOverline } = scoreCalculator(\r\n        activeArea[0].id,\r\n        newMatrix,\r\n        score[activePlayer]\r\n      );\r\n      setScore({ ...score, [activePlayer]: lastScore });\r\n      const newPlayer = players.filter((player) => player !== activePlayer);\r\n      setActivePlayer(...newPlayer);\r\n      setOverlinedLines([...overlinedLines, ...linesToOverline]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let emptiesArray = matrix.filter((obj) => obj.value === null);\r\n    if (emptiesArray.length === 0) {\r\n      if (score.player1 < score.player2) {\r\n        setWinner(\"Player2\");\r\n      } else if (score.player2 < score.player1) {\r\n        setWinner(\"Player1\");\r\n      } else {\r\n        setWinner(\"draw\");\r\n      }\r\n    }\r\n  }, [score]);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.player === \"player1\" ? \"blue container\" : \"red container\"\r\n      }\r\n    >\r\n      <div className=\"players-nav\">\r\n        <h2>{props.player === \"player1\" ? \"PLAYER 1\" : \"PLAYER 2\"}</h2>\r\n      </div>\r\n\r\n      {activePlayer === props.player && (\r\n        <div className=\"flex-container\">\r\n          <div className=\"button-box\">\r\n            <button\r\n              onClick={() => buttonOnclickHandler(\"X\")}\r\n              className={itemToAdd === \"X\" ? \"btn selected\" : \"btn\"}\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n          <div className=\"button-box\">\r\n            <button\r\n              onClick={() => buttonOnclickHandler(\"O\")}\r\n              className={itemToAdd === \"O\" ? \"btn selected\" : \"btn\"}\r\n            >\r\n              O\r\n            </button>\r\n          </div>\r\n          <div className=\"button-box\">\r\n            <button onClick={() => addHandler()} className=\"btn\">\r\n              add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <p>Score:{score[props.player]}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Span = ({ directionsClass, direction, edgesToShorten }) => {\r\n  const edgeMapping = {\r\n    horizontal: [\"left\", \"right\"],\r\n    vertical: [\"top\", \"bottom\"],\r\n    diagonalToLeftBottom: [\"left-bottom\", \"right-top\"],\r\n    diagonalToRightBottom: [\"right-bottom\", \"left-top\"],\r\n  };\r\n\r\n  let edgeClassForSpan = edgesToShorten\r\n    .filter((edge) => edgeMapping[direction].includes(edge))\r\n    .map((edge) => \"short-on-\" + edge)\r\n    .join(\" \");\r\n  const lineClass =\r\n    direction === \"horizontal\"\r\n      ? \"line-horizontal\"\r\n      : direction === \"vertical\"\r\n      ? \"line-vertical\"\r\n      : direction === \"diagonalToLeftBottom\"\r\n      ? \"line-diagonal-left-bottom\"\r\n      : \"line-diagonal-right-bottom\";\r\n\r\n  console.log(\"className \", lineClass + \" \" + edgeClassForSpan);\r\n  return (\r\n    <span\r\n      style={{\r\n        display: directionsClass.includes(direction) ? \"block\" : \"none\",\r\n      }}\r\n      className={lineClass + \" \" + edgeClassForSpan}\r\n    >\r\n      -\r\n    </span>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Span } from \"./Span\";\r\n\r\nexport const TableCell = ({\r\n  id,\r\n  overlineDirections,\r\n  isActive,\r\n  selectHandler,\r\n  value,\r\n}) => {\r\n  const directions = [\r\n    \"horizontal\",\r\n    \"vertical\",\r\n    \"diagonalToLeftBottom\",\r\n    \"diagonalToRightBottom\",\r\n  ];\r\n  let activeClass = isActive ? \"active\" : \"\";\r\n  let directionsClass = overlineDirections.length\r\n    ? overlineDirections.join(\" \")\r\n    : \"\";\r\n  const edgeCells = [\r\n    { edge: \"left\", cells: [0, 3, 6] },\r\n    { edge: \"right\", cells: [2, 5, 8] },\r\n    { edge: \"top\", cells: [0, 1, 2] },\r\n    { edge: \"bottom\", cells: [6, 7, 8] },\r\n    { edge: \"right-top\", cells: [2] },\r\n    { edge: \"right-bottom\", cells: [8] },\r\n    { edge: \"left-top\", cells: [0] },\r\n    { edge: \"left-bottom\", cells: [6] },\r\n  ];\r\n  const edgeDirectionsForCell = edgeCells\r\n    .filter((obj) => obj.cells.includes(id))\r\n    .map((obj) => obj.edge);\r\n  console.log(\"id \", id, \" edgeDirectionsForCell: \", edgeDirectionsForCell);\r\n  return (\r\n    <td key={id} onClick={() => selectHandler(id)} className={activeClass}>\r\n      {directions.map((direction) => (\r\n        <Span\r\n          directionsClass={directionsClass}\r\n          direction={direction}\r\n          edgesToShorten={edgeDirectionsForCell}\r\n        />\r\n      ))}\r\n      <div>{value}</div>\r\n    </td>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { TableCell } from \"./TableCell\";\r\n\r\nexport const TableRow = ({ i, line, selectHandler, overlinedCells }) => {\r\n  return (\r\n    <tr key={i}>\r\n      {line.map((obj) => {\r\n        let directions = [];\r\n        overlinedCells.map((cell) => {\r\n          if (cell.id === obj.id) {\r\n            directions = [...directions, cell.direction];\r\n          }\r\n        });\r\n        return (\r\n          <TableCell\r\n            id={obj.id}\r\n            overlineDirections={directions}\r\n            selectHandler={selectHandler}\r\n            value={obj.value}\r\n            isActive={obj.active}\r\n          />\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { myContext } from \"../Container\";\r\nimport \"./styles/Table.css\";\r\nimport { TableRow } from \"./TableRow\";\r\n\r\nexport default function Table() {\r\n  const { matrix, setMatrix, overlinedLines } = useContext(myContext);\r\n\r\n  // const overlinedCells = overlinedLines.map((obj) => {\r\n  //   return obj.line.map((lineObj) => {\r\n  //     return { id: lineObj.id, direction: obj.direction };\r\n  //   });\r\n  // });\r\n  const overlinedCells = overlinedLines.flatMap((obj) => {\r\n    return obj.line.map((lineObj) => {\r\n      return { id: lineObj.id, direction: obj.direction };\r\n    });\r\n  });\r\n  console.log(overlinedCells);\r\n  const matrixArray = [\r\n    [...matrix.slice(0, 3)],\r\n    [...matrix.slice(3, 6)],\r\n    [...matrix.slice(6)],\r\n  ];\r\n\r\n  const selectHandler = (id) => {\r\n    let newMatrix = [...matrix].map((obj) => {\r\n      return { ...obj, active: false };\r\n    });\r\n    if (newMatrix[id].value === null) {\r\n      newMatrix.splice(id, 1, { id: id, value: null, active: true });\r\n      setMatrix(newMatrix);\r\n    }\r\n  };\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {matrixArray.map((line, i) => (\r\n          <TableRow\r\n            key={i}\r\n            line={line}\r\n            selectHandler={selectHandler}\r\n            overlinedCells={overlinedCells}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { myContext } from \"../Container\";\r\nimport \"./styles/Winner.css\";\r\n\r\nexport default function Winner() {\r\n  const {\r\n    winner,\r\n    setWinner,\r\n    score,\r\n    setScore,\r\n    setActivePlayer,\r\n    matrix,\r\n    setMatrix,\r\n    setOverlinedLines,\r\n  } = useContext(myContext);\r\n\r\n  const playAgainHandler = () => {\r\n    setWinner(null);\r\n    setScore({ player1: 0, player2: 0 });\r\n    setActivePlayer(\"player1\");\r\n    let newMatrix = [...matrix].map((obj) => {\r\n      return { ...obj, value: null, active: false };\r\n    });\r\n    setMatrix(newMatrix);\r\n    setOverlinedLines([]);\r\n  };\r\n  return (\r\n    winner && (\r\n      <div className=\"winnerbox\">\r\n        <div className=\"players-box\">\r\n          <h2>Player 1: {score.player1}</h2>\r\n          <br />\r\n          <h2>Player 2: {score.player2}</h2>\r\n        </div>\r\n        {winner === \"draw\" ? <h1>Draw</h1> : <h1>Winner: {winner}</h1>}\r\n        <button className=\"winner-btn\" onClick={() => playAgainHandler()}>\r\n          play again\r\n        </button>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","\r\nimport React,{useContext} from 'react';\r\nimport Player from './Players/Player';\r\nimport Table from './Table/Table';\r\nimport Winner from './Winner/Winner';\r\nimport {myContext} from './Container';\r\n\r\nfunction App() {\r\n  const {winner}=useContext(myContext)\r\n\r\n  return (\r\n    \r\n    <div className=\"App\"style={{display:'flex',justifyContent:'space-between'}}>\r\n      \r\n      <Player player='player1'/>\r\n      {winner? <Winner/>:<Table />}\r\n      <Player player='player2'/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport React from \"react\"\r\nimport App from \"./App.js\"\r\nimport reactDOM from \"react-dom\"\r\nimport Container from \"./Container.js\"\r\n\r\nreactDOM.render(<Container><App/></Container>,document.getElementById(\"root\"))"],"sourceRoot":""}